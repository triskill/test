<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cz.redrobot.magnum</groupId>
    <artifactId>magnum</artifactId>
    <packaging>pom</packaging>
    <version>2.1.0</version>
    <modules>
        <module>magnum-core</module>
        <module>magnum-documentation</module>
        <module>magnum-components</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--Dependency Versions-->
        <spring.boot.version>3.3.1</spring.boot.version>
        <spring-security.version>6.3.1</spring-security.version>
        <camel.version>4.0.0-M3</camel.version>
        <camel.rabbitmq.version>3.20.5</camel.rabbitmq.version>
        <querydsl.version>5.1.0</querydsl.version>
        <lombok.version>1.18.32</lombok.version>
        <commons-validator.version>1.7</commons-validator.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <javax.servlet-api>4.0.1</javax.servlet-api>
        <validation-api>2.0.1.Final</validation-api>
        <javax.annotation-api>1.3.2</javax.annotation-api>
        <org.modelmapper.version>3.2.0</org.modelmapper.version>
        <apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
        <httpcomponents.version>5.2.4</httpcomponents.version>
        <httpcore-nio.version>4.4.16</httpcore-nio.version>
        <httpasyncclient.version>4.1.5</httpasyncclient.version>
        <httpclient.version>5.3.1</httpclient.version>
        <slf4j.version>2.0.6</slf4j.version>
        <prometheus.version>0.16.0</prometheus.version>
        <micrometer.version>1.13.3</micrometer.version>
        <jackson-annotations.version>2.17.1</jackson-annotations.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <assertj.version>3.23.1</assertj.version>
        <mockito.version>4.10.0</mockito.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <jupiter.version>5.9.2</jupiter.version>
        <agrona.version>1.17.1</agrona.version>
        <apache-commons.version>1.9</apache-commons.version>
        <zeebe.version>8.5.5</zeebe.version>
        <grpc.version>1.65.0</grpc.version>
        <camunda.task-list.version>1.6.2</camunda.task-list.version>
        <flyway.version>9.16.1</flyway.version>
        <keycloak-spring-boot.version>24.0.5</keycloak-spring-boot.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <springfox-swagger.version>3.0.0</springfox-swagger.version>
        <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
        <openapi.version>7.7.0</openapi.version>
        <hibernate.version>1.0.2.Final</hibernate.version>
        <amqp.version>3.1.0</amqp.version>
        <json-validator.version>1.0.72</json-validator.version>
        <org.mapstruct.version>1.6.3</org.mapstruct.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!--  THIS PROJECT  -->
            <dependency>
                <groupId>cz.redrobot.magnum</groupId>
                <artifactId>magnum-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum</groupId>
                <artifactId>magnum-common-types</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum</groupId>
                <artifactId>magnum-persistence-management</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum</groupId>
                <artifactId>magnum-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-connectors-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-connectors-springboot-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!--  THIS PROJECT - Connectors Implementations  -->
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-xslt-connector</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-script-connector</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-template-connector</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!--  THIS PROJECT - Property providers  -->
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-file-property-provider</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-config-property-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-env-property-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>cz.redrobot.magnum.connectors</groupId>
                <artifactId>magnum-database-property-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--Springboot BOM-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--Springboot Security BOM-->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>${spring-security.version}</version>
                <type>pom</type>
            </dependency>

            <!--Camel Starter BOM-->
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-bom</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-starter</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-rabbitmq-starter</artifactId>
                <version>${camel.rabbitmq.version}</version>
            </dependency>

            <!--Database-->
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl.version}</version>
                <classifier>jakarta</classifier>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl.version}</version>
                <classifier>jakarta</classifier>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-core</artifactId>
                <version>${querydsl.version}</version>
            </dependency>

            <!--Util-->
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${org.modelmapper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${apache-commons.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.core5</groupId>
                <artifactId>httpcore5</artifactId>
                <version>${httpcomponents.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpasyncclient</artifactId>
                <version>${httpasyncclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-nio</artifactId>
                <version>${httpcore-nio.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.agrona</groupId>
                <artifactId>agrona</artifactId>
                <version>${agrona.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>

            <!--Javax-->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation-api}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api}</version>
            </dependency>

            <!-- Camunda BOM -->
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-bom</artifactId>
                <version>${zeebe.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- Camunda other dependencies -->
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-exporter-api</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-exporter-test</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-protocol-test-util</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-protocol-jackson</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-protocol-impl</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>camunda-tasklist-client-java</artifactId>
                <version>${camunda.task-list.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>spring-zeebe-starter</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-client-java</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-util</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>zeebe-workflow-engine</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>spring-boot-starter-camunda-sdk</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda.spring</groupId>
                <artifactId>spring-boot-starter-camunda</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda.connector</groupId>
                <artifactId>connector-core</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda.connector</groupId>
                <artifactId>connector-feel-wrapper</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda.connector</groupId>
                <artifactId>spring-boot-starter-camunda-connectors</artifactId>
                <version>${zeebe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.camunda.connector</groupId>
                <artifactId>connector-validation</artifactId>
                <version>${zeebe.version}</version>
            </dependency>

            <!-- I-001 - Camunda Issue https://github.com/camunda-community-hub/spring-zeebe/issues/862 -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-util</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>

            <!-- Flyway -->
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>

            <!-- Keycloak -->
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-spring-boot-starter</artifactId>
                <version>${keycloak-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-spring-security-adapter</artifactId>
                <version>${keycloak-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-admin-client</artifactId>
                <version>${keycloak-spring-boot.version}</version>
            </dependency>

            <!-- AMQP -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${amqp.version}</version>
            </dependency>

            <!-- swagger -->

            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>com.networknt</groupId>
                <artifactId>json-schema-validator</artifactId>
                <version>${json-validator.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--  THIS PROJECT  -->
                <plugin>
                    <groupId>cz.redrobot.magnum.connectors.maven.plugins</groupId>
                    <artifactId>element-templates-aggregator</artifactId>
                    <version>${project.version}</version>
                    <configuration>
                        <jsonResourcePath>template-connector.json</jsonResourcePath>
                        <include>
                            <include>cz\.redrobot\.magnum\.connectors.*</include>
                        </include>
                    </configuration>
                </plugin>

                <!--  OTHER  -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <configuration>
                        <artifactSet>
                            <includes>
                                <include>groupId:artifactId</include>
                            </includes>
                        </artifactSet>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <compilerArgs>
                        <arg>--add-opens</arg>
                        <arg>java.base/java.lang=ALL-UNNAMED</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>repository.spring.release</id>
            <name>Spring GA Repository</name>
            <url>https://repo.spring.io/release</url>
        </repository>
        <repository>
            <id>repository.spring.plugin</id>
            <name>Spring Plugin Repository</name>
            <url>https://repo.spring.io/plugins-release/</url>
        </repository>
<!--        <repository>-->
<!--            <id>central.public</id>-->
<!--            <name>Central Public Repository</name>-->
<!--            <url>https://repo1.maven.org/maven2/</url>-->
<!--        </repository>-->
        <repository>
            <id>OSS Sonatype snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

</project>

